/*
 * Food Data Central API
 * The FoodData Central API provides REST access to FoodData Central (FDC). It is intended primarily to assist application developers wishing to incorporate nutrient data into their applications or websites.   To take full advantage of the API, developers should familiarize themselves with the database by reading the database documentation available via links on [Data Type Documentation](https://fdc.nal.usda.gov/data-documentation.html). This documentation provides the detailed definitions and descriptions needed to understand the data elements referenced in the API documentation.      Additional details about the API including rate limits, access, and licensing are available on the [FDC website](https://fdc.nal.usda.gov/api-guide.html)
 *
 * OpenAPI spec version: 1.0.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.52
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.FoodDataCentralApi);
  }
}(this, function(expect, FoodDataCentralApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('NutrientAnalysisDetails', function() {
      beforeEach(function() {
        instance = new FoodDataCentralApi.NutrientAnalysisDetails();
      });

      it('should create an instance of NutrientAnalysisDetails', function() {
        // TODO: update the code to test NutrientAnalysisDetails
        expect(instance).to.be.a(FoodDataCentralApi.NutrientAnalysisDetails);
      });

      it('should have the property subSampleId (base name: "subSampleId")', function() {
        // TODO: update the code to test the property subSampleId
        expect(instance).to.have.property('subSampleId');
        // expect(instance.subSampleId).to.be(expectedValueLiteral);
      });

      it('should have the property amount (base name: "amount")', function() {
        // TODO: update the code to test the property amount
        expect(instance).to.have.property('amount');
        // expect(instance.amount).to.be(expectedValueLiteral);
      });

      it('should have the property nutrientId (base name: "nutrientId")', function() {
        // TODO: update the code to test the property nutrientId
        expect(instance).to.have.property('nutrientId');
        // expect(instance.nutrientId).to.be(expectedValueLiteral);
      });

      it('should have the property labMethodDescription (base name: "labMethodDescription")', function() {
        // TODO: update the code to test the property labMethodDescription
        expect(instance).to.have.property('labMethodDescription');
        // expect(instance.labMethodDescription).to.be(expectedValueLiteral);
      });

      it('should have the property labMethodOriginalDescription (base name: "labMethodOriginalDescription")', function() {
        // TODO: update the code to test the property labMethodOriginalDescription
        expect(instance).to.have.property('labMethodOriginalDescription');
        // expect(instance.labMethodOriginalDescription).to.be(expectedValueLiteral);
      });

      it('should have the property labMethodLink (base name: "labMethodLink")', function() {
        // TODO: update the code to test the property labMethodLink
        expect(instance).to.have.property('labMethodLink');
        // expect(instance.labMethodLink).to.be(expectedValueLiteral);
      });

      it('should have the property labMethodTechnique (base name: "labMethodTechnique")', function() {
        // TODO: update the code to test the property labMethodTechnique
        expect(instance).to.have.property('labMethodTechnique');
        // expect(instance.labMethodTechnique).to.be(expectedValueLiteral);
      });

      it('should have the property nutrientAcquisitionDetails (base name: "nutrientAcquisitionDetails")', function() {
        // TODO: update the code to test the property nutrientAcquisitionDetails
        expect(instance).to.have.property('nutrientAcquisitionDetails');
        // expect(instance.nutrientAcquisitionDetails).to.be(expectedValueLiteral);
      });

    });
  });

}));
