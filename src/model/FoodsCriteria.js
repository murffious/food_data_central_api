/*
 * Food Data Central API
 * The FoodData Central API provides REST access to FoodData Central (FDC). It is intended primarily to assist application developers wishing to incorporate nutrient data into their applications or websites.   To take full advantage of the API, developers should familiarize themselves with the database by reading the database documentation available via links on [Data Type Documentation](https://fdc.nal.usda.gov/data-documentation.html). This documentation provides the detailed definitions and descriptions needed to understand the data elements referenced in the API documentation.      Additional details about the API including rate limits, access, and licensing are available on the [FDC website](https://fdc.nal.usda.gov/api-guide.html)
 *
 * OpenAPI spec version: 1.0.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.52
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from .js';

/**
 * The FoodsCriteria model module.
 * @module model/FoodsCriteria
 * @version 1.0.1
 */
export class FoodsCriteria {
  /**
   * Constructs a new <code>FoodsCriteria</code>.
   * JSON for request body of &#x27;foods&#x27; POST request. Retrieves a list of food items by a list of up to 20 FDC IDs. Optional format and nutrients can be specified. Invalid FDC ID&#x27;s or ones that are not found are omitted and an empty set is returned if there are no matches.
   * @alias module:model/FoodsCriteria
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>FoodsCriteria</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/FoodsCriteria} obj Optional instance to populate.
   * @return {module:model/FoodsCriteria} The populated <code>FoodsCriteria</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new FoodsCriteria();
      if (data.hasOwnProperty('fdcIds'))
        obj.fdcIds = ApiClient.convertToType(data['fdcIds'], ['Number']);
      if (data.hasOwnProperty('format'))
        obj.format = ApiClient.convertToType(data['format'], 'String');
      if (data.hasOwnProperty('nutrients'))
        obj.nutrients = ApiClient.convertToType(data['nutrients'], ['Number']);
    }
    return obj;
  }
}

/**
 * List of multiple FDC ID's
 * @member {Array.<Number>} fdcIds
 */
FoodsCriteria.prototype.fdcIds = undefined;

/**
 * Allowed values for the <code>format</code> property.
 * @enum {String}
 * @readonly
 */
FoodsCriteria.FormatEnum = {
  /**
   * value: "abridged"
   * @const
   */
  abridged: "abridged",

  /**
   * value: "full"
   * @const
   */
  full: "full"
};
/**
 * Optional. 'abridged' for an abridged set of elements, 'full' for all elements (default).
 * @member {module:model/FoodsCriteria.FormatEnum} format
 */
FoodsCriteria.prototype.format = undefined;

/**
 * Optional. List of up to 25 nutrient numbers. Only the nutrient information for the specified nutrients will be returned.  If a food does not have any matching nutrients, the food will be returned with an empty foodNutrients element.
 * @member {Array.<Number>} nutrients
 */
FoodsCriteria.prototype.nutrients = undefined;

